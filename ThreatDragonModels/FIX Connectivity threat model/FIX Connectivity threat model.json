{
  "summary": {
    "title": "FIX Connectivity threat model",
    "owner": "Tanvir Ahmed",
    "description": "FIX Connectivity threat model"
  },
  "detail": {
    "contributors": [],
    "diagrams": [
      {
        "title": "FIX diagram",
        "thumbnail": "./public/content/images/thumbnail.jpg",
        "id": 0,
        "diagramJson": {
          "cells": [
            {
              "type": "tm.Actor",
              "size": {
                "width": 160,
                "height": 80
              },
              "position": {
                "x": 53,
                "y": 45
              },
              "angle": 0,
              "id": "2e133cdc-a9dc-4a3d-9347-dee6505ab535",
              "z": 1,
              "hasOpenThreats": false,
              "outOfScope": true,
              "reasonOutOfScope": "Client can use any FIX client they want",
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasNoOpenThreats isOutOfScope"
                },
                "text": {
                  "text": "Client - FIX Client"
                },
                ".element-text": {
                  "class": "element-text hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Process",
              "size": {
                "width": 100,
                "height": 100
              },
              "position": {
                "x": 462,
                "y": 27
              },
              "angle": 0,
              "id": "f6b63756-1834-4c65-8524-a53a60b4ceda",
              "z": 2,
              "hasOpenThreats": false,
              "privilegeLevel": "Low",
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasNoOpenThreats isInScope"
                },
                "text": {
                  "text": "FIX Gateway"
                },
                ".element-text": {
                  "class": "element-text hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "x": 211,
                "y": 81
              },
              "target": {
                "id": "f6b63756-1834-4c65-8524-a53a60b4ceda"
              },
              "vertices": [
                {
                  "x": 442,
                  "y": 80
                }
              ],
              "id": "aaf63304-c6fa-4ca9-8074-8a5218e917ed",
              "labels": [
                {
                  "position": {
                    "distance": 0.5017711690027526,
                    "offset": -1.7184020068962127
                  },
                  "attrs": {
                    "text": {
                      "text": "FIX Protocol",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 3,
              "hasOpenThreats": true,
              "protocol": "FIX",
              "threats": [
                {
                  "status": "Open",
                  "severity": "High",
                  "type": "Spoofing",
                  "title": "Spoofing FIX messages (one user pretending to be another user).",
                  "mitigation": "Dedicated leased line between customer and FIX gateway (only selected users).\nPerform authentication and authorization of client before performing any sensitive operation."
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "type": "Tampering",
                  "title": "The channel is not encrypted hence man in the middle attack possible",
                  "mitigation": "dedicated leased line between client and ANX",
                  "description": "since the channel is not encrypted an attacker can be in the middle of the connection between client and ANX and can modify messages sent between the two parties."
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "type": "Repudiation",
                  "title": "Repudiation of messages - Actor denying messages sent by them",
                  "description": "repudiation - for example client placing an order but denying that the order was placed.",
                  "mitigation": "authentication between client an FIX gateway before any sensitive operation occur."
                },
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Information disclosure",
                  "title": "Information disclosure about the system and other clients",
                  "description": "Information disclosure can be through variety of methods such as unrestricted API, debugging message, etc. In this case information disclosure can be through malformed FIX messages.",
                  "mitigation": "Message validation and authorization checks should be done wherever applicable. for example: one client asking for order details of another client."
                },
                {
                  "status": "Open",
                  "severity": "Low",
                  "type": "Denial of service",
                  "title": "Client sending large number of traffic to the FIX gateway",
                  "mitigation": "FIX gateway - not opened to the internet.\nLoadbalancer to reduce impact to DoS\nFirewall to filter traffic",
                  "description": "client sending large amount of traffic to the FIX gateway so ANX cannt process legitimate request"
                },
                {
                  "status": "Open",
                  "severity": "Low",
                  "type": "Elevation of privilege",
                  "title": "Client can elevate privileges on the FIX gateway.",
                  "mitigation": "FIX gateway admin interface should be restricted to internal ANX network"
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Boundary",
              "smooth": true,
              "source": {
                "x": 343,
                "y": 3
              },
              "target": {
                "x": 340,
                "y": 161
              },
              "vertices": [
                {
                  "x": 311,
                  "y": 85
                }
              ],
              "id": "ea454d52-8fc5-4679-81a1-41e1af149c12",
              "z": 4,
              "attrs": {}
            },
            {
              "type": "tm.Process",
              "size": {
                "width": 100,
                "height": 100
              },
              "position": {
                "x": 628,
                "y": 187
              },
              "angle": 0,
              "id": "4786c1db-9f4d-46af-b2df-05828ce54123",
              "z": 5,
              "hasOpenThreats": false,
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasNoOpenThreats isInScope"
                },
                "text": {
                  "text": "Engine Service"
                },
                ".element-text": {
                  "class": "element-text hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Process",
              "size": {
                "width": 100,
                "height": 100
              },
              "position": {
                "x": 711,
                "y": 12
              },
              "angle": 0,
              "id": "b95101ec-0769-415e-83ae-51a5eaee4f55",
              "z": 6,
              "hasOpenThreats": false,
              "attrs": {
                ".element-shape": {
                  "class": "element-shape hasNoOpenThreats isInScope"
                },
                "text": {
                  "text": "MarketGrid"
                },
                ".element-text": {
                  "class": "element-text hasNoOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "f6b63756-1834-4c65-8524-a53a60b4ceda"
              },
              "target": {
                "id": "4786c1db-9f4d-46af-b2df-05828ce54123"
              },
              "vertices": [
                {
                  "x": 550,
                  "y": 232
                }
              ],
              "id": "2208e4e7-76fa-4b3b-8cd5-b7d3f6254728",
              "labels": [
                {
                  "position": {
                    "distance": 0.46220481593444585,
                    "offset": -0.1576304929330945
                  },
                  "attrs": {
                    "text": {
                      "text": "Auth (HTTPS?)",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 7,
              "hasOpenThreats": true,
              "protocol": "HTTP",
              "isEncrypted": true,
              "threats": [
                {
                  "status": "Open",
                  "severity": "Low",
                  "type": "Spoofing",
                  "title": "Spoofing of data sent from FIX gateway to Engine Service",
                  "mitigation": "Use HTTPS channel",
                  "description": "Attacker sending forged authentication messages to Engine service"
                },
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Tampering",
                  "title": "Tampering of data sent between FIX gateway and Engine service",
                  "mitigation": "Use encrypted channel such as HTTPS"
                },
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Information disclosure",
                  "title": "Information disclosure of the authentication details",
                  "description": "Information disclosure can be through variety of methods such as unrestricted API, debugging message. In this case information disclosure can be through giving specific user details when authentication is unsuccessful such as \"Password is wrong\".  When authentication is done a generic error message should be provided such as \"invalid username/password\"",
                  "mitigation": "Generic error message"
                },
                {
                  "status": "Open",
                  "severity": "Low",
                  "type": "Denial of service",
                  "title": "Denial of service by sending junk forged messages",
                  "description": "flooding the engine service  system with junk authentication messages so legitimate authentication message will be denied",
                  "mitigation": "Use API gateway with Denial of service protection or rate throttling requests."
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "f6b63756-1834-4c65-8524-a53a60b4ceda"
              },
              "target": {
                "id": "b95101ec-0769-415e-83ae-51a5eaee4f55"
              },
              "vertices": [
                {
                  "x": 633,
                  "y": 44
                }
              ],
              "id": "c2a92d1f-cfe2-428a-9f87-5a493c7c27e0",
              "labels": [
                {
                  "position": {
                    "distance": 0.5182267083698877,
                    "offset": -15.03716728859581
                  },
                  "attrs": {
                    "text": {
                      "text": "API (HTTP?)",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 8,
              "hasOpenThreats": true,
              "protocol": "HTTP",
              "threats": [
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Spoofing",
                  "title": "Spoofing of messages sent from FIX gateway to Market Grid",
                  "description": "rogue system can send rogue messages to market grid pretending to be FIX gateway and place an order.",
                  "mitigation": "Use authentication such as (two way mutual SSL) so only FIX gateway can send message to Market grid"
                },
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Tampering",
                  "title": "Tampering of data in transit",
                  "description": "Man in the middle attack between FIX gateway and market grid",
                  "mitigation": "Use Encrypted channel such as HTTPS"
                },
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Information disclosure",
                  "title": "Information disclosure of sensitive information",
                  "description": "Information disclosure can be through variety of methods such as unrestricted API, debugging message. In this case information disclosure can be through unauthenticated APIs. Ensure all APIs performing sensitive functions are authenticated.",
                  "mitigation": "Authentication checks"
                },
                {
                  "status": "Open",
                  "severity": "High",
                  "type": "Repudiation",
                  "title": "repudiation - messages sent from FIX gateway should have integrity check whether it has been sent from FIX gateway",
                  "description": "For example: Rogue user sent rogue message (Put an order) to the market to Market Grid via MG API.",
                  "mitigation": "Message integrity checks and authentication checks for sensitive operations."
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasOpenThreats isInScope"
                }
              }
            },
            {
              "type": "tm.Flow",
              "smooth": true,
              "source": {
                "id": "4786c1db-9f4d-46af-b2df-05828ce54123"
              },
              "target": {
                "x": 812,
                "y": 62
              },
              "vertices": [
                {
                  "x": 814,
                  "y": 183
                }
              ],
              "id": "bbd60a41-465d-426a-ace8-b67afb82b1f2",
              "labels": [
                {
                  "position": 0.5,
                  "attrs": {
                    "text": {
                      "text": "MQ (Encrypted?)",
                      "font-weight": "400",
                      "font-size": "small"
                    }
                  }
                }
              ],
              "z": 9,
              "hasOpenThreats": true,
              "threats": [
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Spoofing",
                  "title": "Spoofing of messages from MG to Engine service and vice versa.",
                  "description": "rogue system can send rogue messages (such as place an order) to Engine service pretending to be market grid.",
                  "mitigation": "Use authentication checks before any sensitive operations."
                },
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Tampering",
                  "title": "Tampering of data between MG and Engine service",
                  "mitigation": "use TLS"
                },
                {
                  "status": "Open",
                  "severity": "Medium",
                  "type": "Information disclosure",
                  "title": "Information disclosure",
                  "mitigation": "",
                  "description": "Information disclosure can be through variety of methods such as unrestricted API, debugging message. In this isntance information disclosure can be through unauthenticated MQ listeners/publishers . Ensure all listeners, publishers performing sensitive functions are authenticated."
                }
              ],
              "attrs": {
                ".marker-target": {
                  "class": "marker-target hasOpenThreats isInScope"
                },
                ".connection": {
                  "class": "connection hasOpenThreats isInScope"
                }
              }
            }
          ]
        },
        "size": {
          "height": 3443.0341796875,
          "width": 866.8545532226562
        }
      }
    ]
  }
}